@import url('default.css');
@import url('common.css');


.visual h2 {
    position: absolute;
    left: calc(50% - 700px);
    top: 50%;
    z-index: 12;
    font-size: 57px;
    line-height: 69px;
    color: #fff;
    transform: translate(0,-50%);
    /*fullpage.js 플러그인에서 한 section에 글자 딱 하나만 존재할때
    해당 글자에 행간이 들어가면 해당 section에서는 스크롤이 작동되지 않을 수 있음*/
}
.visual video {
    position:absolute;
    right:0;
    bottom:0;
    top:0;
    z-index: 10;
    width:100%;
    height:100%;
    object-fit:cover;
}
.visual .bg {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    /*left,top, right, bottom을 모두 0을 주면 넓이 100, 높이 100과 동일하게 적용됨*/
    z-index: 11;
    background-color: rgba(0,0,0,0.2);
}

/*
1440
1200
1000
800
640
*/

@media screen and (max-width:1440px){
    .visual h2 {
        left: 20px;
    }
}/*visual 모바이 종료*/
@media screen and (max-width:1200px){
    .visual h2 {
        font-size: 47px;
        line-height: 59px;
    }
}
@media screen and (max-width:1000px){
    .visual h2 {
        font-size: 42px;
        line-height: 55px;
    }
}
@media screen and (max-width:800px){
    .visual h2 {
        font-size: 37px;
        line-height: 50px;
    }
}
@media screen and (max-width:640px){
    /*만약 풀페이지를 모바일에서 해제하고 높이를 제한해야 한다면 section클래스를 준 요소 말고
    그 안에 있는 요소한테 높이를 줘야함 */
    .visual .inner {
        height: 447px;
        
    }
    .visual h2 {
        font-size: 24px;
        line-height: 29px;
    }
}

.count {
    color: #fff;
    background-color: #DB2319;
}
.count .tit {
    margin: 0 0 0 8.33%;
}
.count .tit h2 {
    margin: 0 0 19px 0;
    font-size: 38px;
    line-height: 49px;
}
.count .tit h2 strong {
    font-weight: 700;
}
.count .tit p span {
    display: block;
}
.count .rate {
    position: absolute;
    left: calc(50% + 265px);
    top: 50%;
    width: 50%;
    transform: translate(0,-50%);
}
.count .rate ul li {
    position: relative;
    margin: 0 0 56px 0;
}
.count .rate ul li::after {
    position: absolute;
    left: 0;
    top: 73px;
    width: 100%;
    height: 1px;
    z-index: -1; /*어쩔 수 없이 position: absolute;를 주지만 다른 요소보다 아래*/
    background-color: #fff;
    content: "";
}
.count .rate ul li:last-child {
    margin-bottom: 0;
}

.count .rate ul li .num strong {
    display: inline-block;
    font-size: 50px;
    font-weight: 700;
    line-height: 1.1;
    background-color: #DB2319;
}
.count .rate ul li .num span {
    display: inline-block;
    position: relative;
    padding: 0 0 0 15px;
    font-size: 23px;
    font-weight: 700;
    background-color: #DB2319;
}
/* .count .rate ul li .num span:after {
    position: absolute;
    left: 83%;
    top: 26px;
    width: 10000%;
    height: 1px;
    background-color: #fff;
    content: "";
} */

@media screen and (max-width:1440px){
    .count .tit {
        margin: 0;
    }
}
@media screen and (max-width:1200px){
    .count .rate {
        left: calc(50% + 50px);
    }
}
@media screen and (max-width:800px){}

@media screen and (max-width:640px){
    .count {
        padding: 45px 0 62px 0;
    }
    .count .tit {
        margin: 0 0 36px 0;
    }
    .count .tit h2 {
        margin: 0 0 5px 0;
        font-size: 23px;
        line-height: 30px;
    }
    .count .tit p span {
        display: inline;
    }
    .count .rate {
        position: relative;
        left: auto;
        top: auto;
        width: auto;

        transform: translate(0,0);
    }
    .count .rate ul li {
        margin: 0 0 43px 0;
    }
    .count .rate ul li::after {
        top: 50px;
        width: 106%;
    }
    .count .rate ul li .num strong {
        font-size: 30px;
    }
    .count .rate ul li .num span {
        padding: 0 0 0 15px;
    }
}/*count 종료*/





.biz {

}
.news {
    background-color: #F9F6F2;
}
.support {

}
.footer {

}

/*오른쪽 네비게이션 디자인 변경
  선택자가 #fp-nav ul li인 것과 body #fp-nav ul li인 것이 동시에 존잼한다면
  body부터 선언한 요소가 먼저 적용됨( 단, 나머지 선택자는 동일) */
body #fp-nav ul li {
    width: 12px;
    height: 12px;
    margin: 12px;
}
body #fp-nav ul li:last-child {/*footer 동그라미 삭제*/
    display: none;
}
body #fp-nav ul li a span,
body #fp-nav ul li:hover a span {
    height: 100%;
    width: 100%;
    border: 1px solid #C79E6A;
    background: none;
    left: 0;
    top: 0;
    margin: 0;
}
body #fp-nav ul li a.active span,
body #fp-nav ul li:hover a.active span {
    height: 100%;
    width: 100%;
    margin: 0;
    background: #C79E6A;
}
body #fp-nav ul li .fp-tooltip {
    top: -9px;
    right: 23px !important;
    padding: 4px 11px;
    color: #fff;
    background-color: #C79E6A;
    border-radius: 19px;
    font-size: 13px;
    font-family: 'Noto Sans KR', 'NanumGothic', 'Malgun Gothic', 'Apple SD Gothic', 'Apple SD Gothic Neo', 'Dotum', sans-serif;; 
    white-space: nowrap; /*줄바꿈 금지*/
    max-width: max-content; /*콘텐츠 있는 만큼 다*/
    overflow: visible;
    width: auto;
}
body #fp-nav ul li .fp-tooltip:after {
    position: absolute;
    right: -3px;
    top: 10px;
    width: 8px;
    height: 8px;
    background-color: #C79E6A;
    transform: rotate(45deg);
    content: "";
}




.fp-watermark {/*fullpage copyright 삭제*/
    display: none;
}


/*모바일에서는 fullpage 적용을 안하는데 발생하는 오류 수정*/

body .section .fp-is-overflow {
    overflow: hidden;
}
@media screen and (max-width:640px){
    .fp-responsive .fp-is-overflow.fp-section  {
        min-height: auto !important;
        /*
            fullpage.js에서 640px 이하에서는 풀페이지 적용하지 않도록 함
            근데 이때 약간의 오류로 min-height가 해제되지않아 높이가 많이 잡힘
            그래서 min-height:auto를 줘야하는 상황
            visual에 min-height:auto 적용되지 않음(css 적용순위에 밀려서)
            이때 절대 내가 적용한 값을 먼저 적용하게 하는게
            min-height: auto !important;

            이렇게 플러그인을 써서 내가 주지않은 스타일을 고쳐서 쓸때 !important;
        */
    }
}